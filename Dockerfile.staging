### STAGE 1: Build ###

# We label our stage as ‘builder’
FROM node:11 as builder

COPY package.json yarn.lock ./

## Storing node modules on a separate layer will prevent unnecessary yarn installs at each build
RUN yarn install && mkdir /usr/src/app && mv ./node_modules ./usr/src/app

WORKDIR /usr/src/app

COPY . .

## Build the node app in production mode and store the artifacts in dist folder
RUN ls /usr/src/app && yarn start build
#RUN $(npm bin)/ng build --prod --output-path=dist


### STAGE 2: Setup ###

FROM nginx:stable-alpine

## Copy our default nginx config
COPY nginx.conf /etc/nginx/conf.d/default.conf

## Remove default nginx website
RUN rm -rf /usr/share/nginx/html/*

## From ‘builder’ stage copy over the artifacts in dist folder to default nginx public folder
COPY --from=builder /usr/src/app/dist /usr/share/nginx/html
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]